#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.1
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ActeursETFilms
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="filmacteursSQL")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void Insertacteurs(acteurs instance);
    partial void Updateacteurs(acteurs instance);
    partial void Deleteacteurs(acteurs instance);
    partial void Insertacteurs_films(acteurs_films instance);
    partial void Updateacteurs_films(acteurs_films instance);
    partial void Deleteacteurs_films(acteurs_films instance);
    partial void Insertfilms(films instance);
    partial void Updatefilms(films instance);
    partial void Deletefilms(films instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ActeursETFilms.Properties.Settings.Default.filmacteursSQLConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<acteurs> acteurs
		{
			get
			{
				return this.GetTable<acteurs>();
			}
		}
		
		public System.Data.Linq.Table<acteurs_films> acteurs_films
		{
			get
			{
				return this.GetTable<acteurs_films>();
			}
		}
		
		public System.Data.Linq.Table<films> films
		{
			get
			{
				return this.GetTable<films>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LastId")]
		public int LastId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> x, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> y, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> res)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), x, y, res);
			x = ((System.Nullable<int>)(result.GetParameterValue(0)));
			y = ((System.Nullable<int>)(result.GetParameterValue(1)));
			res = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.acteurs")]
	public partial class acteurs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_acteur;
		
		private string _nom;
		
		private string _prenom;
		
		private string _sexe;
		
		private System.Nullable<System.DateTime> _datenaiss;
		
		private string _photo;
		
		private EntitySet<acteurs_films> _acteurs_films;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_acteurChanging(int value);
    partial void Onid_acteurChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnsexeChanging(string value);
    partial void OnsexeChanged();
    partial void OndatenaissChanging(System.Nullable<System.DateTime> value);
    partial void OndatenaissChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    #endregion
		
		public acteurs()
		{
			this._acteurs_films = new EntitySet<acteurs_films>(new Action<acteurs_films>(this.attach_acteurs_films), new Action<acteurs_films>(this.detach_acteurs_films));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_acteur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_acteur
		{
			get
			{
				return this._id_acteur;
			}
			set
			{
				if ((this._id_acteur != value))
				{
					this.Onid_acteurChanging(value);
					this.SendPropertyChanging();
					this._id_acteur = value;
					this.SendPropertyChanged("id_acteur");
					this.Onid_acteurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="NVarChar(50)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexe", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string sexe
		{
			get
			{
				return this._sexe;
			}
			set
			{
				if ((this._sexe != value))
				{
					this.OnsexeChanging(value);
					this.SendPropertyChanging();
					this._sexe = value;
					this.SendPropertyChanged("sexe");
					this.OnsexeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datenaiss", DbType="DateTime")]
		public System.Nullable<System.DateTime> datenaiss
		{
			get
			{
				return this._datenaiss;
			}
			set
			{
				if ((this._datenaiss != value))
				{
					this.OndatenaissChanging(value);
					this.SendPropertyChanging();
					this._datenaiss = value;
					this.SendPropertyChanged("datenaiss");
					this.OndatenaissChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="NChar(50)")]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="acteurs_acteurs_films", Storage="_acteurs_films", ThisKey="id_acteur", OtherKey="id_acteur")]
		public EntitySet<acteurs_films> acteurs_films
		{
			get
			{
				return this._acteurs_films;
			}
			set
			{
				this._acteurs_films.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_acteurs_films(acteurs_films entity)
		{
			this.SendPropertyChanging();
			entity.acteurs = this;
		}
		
		private void detach_acteurs_films(acteurs_films entity)
		{
			this.SendPropertyChanging();
			entity.acteurs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.acteurs_films")]
	public partial class acteurs_films : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_acteur;
		
		private int _id_film;
		
		private EntityRef<acteurs> _acteurs;
		
		private EntityRef<films> _films;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_acteurChanging(int value);
    partial void Onid_acteurChanged();
    partial void Onid_filmChanging(int value);
    partial void Onid_filmChanged();
    #endregion
		
		public acteurs_films()
		{
			this._acteurs = default(EntityRef<acteurs>);
			this._films = default(EntityRef<films>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_acteur", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_acteur
		{
			get
			{
				return this._id_acteur;
			}
			set
			{
				if ((this._id_acteur != value))
				{
					if (this._acteurs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_acteurChanging(value);
					this.SendPropertyChanging();
					this._id_acteur = value;
					this.SendPropertyChanged("id_acteur");
					this.Onid_acteurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_film", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_film
		{
			get
			{
				return this._id_film;
			}
			set
			{
				if ((this._id_film != value))
				{
					if (this._films.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_filmChanging(value);
					this.SendPropertyChanging();
					this._id_film = value;
					this.SendPropertyChanged("id_film");
					this.Onid_filmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="acteurs_acteurs_films", Storage="_acteurs", ThisKey="id_acteur", OtherKey="id_acteur", IsForeignKey=true)]
		public acteurs acteurs
		{
			get
			{
				return this._acteurs.Entity;
			}
			set
			{
				acteurs previousValue = this._acteurs.Entity;
				if (((previousValue != value) 
							|| (this._acteurs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._acteurs.Entity = null;
						previousValue.acteurs_films.Remove(this);
					}
					this._acteurs.Entity = value;
					if ((value != null))
					{
						value.acteurs_films.Add(this);
						this._id_acteur = value.id_acteur;
					}
					else
					{
						this._id_acteur = default(int);
					}
					this.SendPropertyChanged("acteurs");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="films_acteurs_films", Storage="_films", ThisKey="id_film", OtherKey="id_film", IsForeignKey=true)]
		public films films
		{
			get
			{
				return this._films.Entity;
			}
			set
			{
				films previousValue = this._films.Entity;
				if (((previousValue != value) 
							|| (this._films.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._films.Entity = null;
						previousValue.acteurs_films.Remove(this);
					}
					this._films.Entity = value;
					if ((value != null))
					{
						value.acteurs_films.Add(this);
						this._id_film = value.id_film;
					}
					else
					{
						this._id_film = default(int);
					}
					this.SendPropertyChanged("films");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.films")]
	public partial class films : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_film;
		
		private string _nom;
		
		private System.Nullable<short> _annee;
		
		private string _realisateur;
		
		private EntitySet<acteurs_films> _acteurs_films;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_filmChanging(int value);
    partial void Onid_filmChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnanneeChanging(System.Nullable<short> value);
    partial void OnanneeChanged();
    partial void OnrealisateurChanging(string value);
    partial void OnrealisateurChanged();
    #endregion
		
		public films()
		{
			this._acteurs_films = new EntitySet<acteurs_films>(new Action<acteurs_films>(this.attach_acteurs_films), new Action<acteurs_films>(this.detach_acteurs_films));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_film", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_film
		{
			get
			{
				return this._id_film;
			}
			set
			{
				if ((this._id_film != value))
				{
					this.Onid_filmChanging(value);
					this.SendPropertyChanging();
					this._id_film = value;
					this.SendPropertyChanged("id_film");
					this.Onid_filmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_annee", DbType="SmallInt")]
		public System.Nullable<short> annee
		{
			get
			{
				return this._annee;
			}
			set
			{
				if ((this._annee != value))
				{
					this.OnanneeChanging(value);
					this.SendPropertyChanging();
					this._annee = value;
					this.SendPropertyChanged("annee");
					this.OnanneeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_realisateur", DbType="NVarChar(50)")]
		public string realisateur
		{
			get
			{
				return this._realisateur;
			}
			set
			{
				if ((this._realisateur != value))
				{
					this.OnrealisateurChanging(value);
					this.SendPropertyChanging();
					this._realisateur = value;
					this.SendPropertyChanged("realisateur");
					this.OnrealisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="films_acteurs_films", Storage="_acteurs_films", ThisKey="id_film", OtherKey="id_film")]
		public EntitySet<acteurs_films> acteurs_films
		{
			get
			{
				return this._acteurs_films;
			}
			set
			{
				this._acteurs_films.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_acteurs_films(acteurs_films entity)
		{
			this.SendPropertyChanging();
			entity.films = this;
		}
		
		private void detach_acteurs_films(acteurs_films entity)
		{
			this.SendPropertyChanging();
			entity.films = null;
		}
	}
}
#pragma warning restore 1591
